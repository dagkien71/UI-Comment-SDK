import { Comment, CommentMode, CommentSDKConfig, User } from "../types";
export declare class CommentManager {
    private config;
    private comments;
    private commentBubbles;
    private activeForm;
    private activeModal;
    private activeOverlay;
    private mode;
    private root;
    private mutationTimeout;
    private escKeyHandler;
    private visibilityObserver;
    private eventBatcher;
    private positionCache;
    private throttledUpdatePositions;
    private rafUpdatePositions;
    private isMobile;
    private touchGestureRecognizer;
    private debouncedUpdatePositions;
    constructor(config: CommentSDKConfig, root: HTMLElement);
    private attachEventListeners;
    private handleElementClick;
    private handleElementMouseEnter;
    private handleElementMouseLeave;
    private handleCommentSubmit;
    private closeActiveComponents;
    private createOverlay;
    private removeOverlay;
    showModal(modal: any): void;
    private showCommentForm;
    private hideCommentForm;
    private addBubbleToLayer;
    private createComment;
    private createCommentBubble;
    private addReply;
    private resolveComment;
    private changeCommentStatus;
    private deleteComment;
    private updateBubblePositions;
    private forceUpdateBubblePositions;
    private getCurrentUrl;
    loadComments(): Promise<void>;
    private updateLayerVisibility;
    setMode(mode: CommentMode): void;
    getMode(): CommentMode;
    getComments(): Comment[];
    getCommentsForElement(element: Element): Comment[];
    getCommentBubble(commentId: string): any | null;
    updateCurrentUser(user: User): void;
    highlightElement(element: Element): void;
    testBubbleClicks(): void;
    destroy(): void;
}
//# sourceMappingURL=CommentManager.d.ts.map